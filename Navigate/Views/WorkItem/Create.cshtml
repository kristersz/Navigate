@model Navigate.ViewModels.WorkItemCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>WorkItem</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Subject)
            @Html.ValidationMessageFor(model => model.Subject)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EstimatedTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EstimatedTime)
            @Html.ValidationMessageFor(model => model.EstimatedTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.WorkItemType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.WorkItemType, Model.AllWorkItemTypes)
            @Html.ValidationMessageFor(model => model.WorkItemType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Priority)
        </div>  
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Priority, from v in (Navigate.Models.Classifiers.WorkItemPriority[])(Enum.GetValues(typeof(Navigate.Models.Classifiers.WorkItemPriority)))
                                                select new SelectListItem() {
                                                    Text = ((System.ComponentModel.DataAnnotations.DisplayAttribute)(typeof(Navigate.Models.Classifiers.WorkItemPriority).GetField(v.ToString()).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.DisplayAttribute), false).First())).Name,                             
                                                    Value = v.ToString(),                         
                                                    })
            @Html.ValidationMessageFor(model => model.Priority)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AssignedToUserId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AssignedToUserId, Model.AllUsers)
            @Html.ValidationMessageFor(model => model.AssignedToUserId)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    
}
