@model Navigate.ViewModels.WorkItemCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create New Work Item!</h2>

@using (Html.BeginForm("Create","WorkItem", FormMethod.Post, new { @id = "createForm" })) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>WorkItem</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Subject)
            @Html.ValidationMessageFor(model => model.Subject)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EstimatedTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EstimatedTime)
            @Html.ValidationMessageFor(model => model.EstimatedTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.WorkItemType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.WorkItemType, Model.AllWorkItemTypes)
            @Html.ValidationMessageFor(model => model.WorkItemType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Priority)
        </div>  
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Priority, Model.AllPriorities)
            @Html.ValidationMessageFor(model => model.Priority)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AssignedToUserId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AssignedToUserId, Model.AllUsers)
            @Html.ValidationMessageFor(model => model.AssignedToUserId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.isRecurring)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.isRecurring)
            @Html.ValidationMessageFor(model => model.isRecurring)
        </div>
        <div id="recurrencePatternOptions" class="hidden">
            <div class ="editor-label">
                @Html.LabelFor(model => model.RecurrenceType)
            </div>
            <div>
                @Html.EditorFor(model => model.RecurrenceType, "Enum_RadioButtonList")
            </div>
            <div id="patterns">
                <div id="Daily" class="hidden patterns">
                    <div class="editor-field">
                        Every @Html.EditorFor(model => model.DailyInterval) day(s)
                        @Html.ValidationMessageFor(model => model.DailyInterval)
                    </div>
                    <div>
                        @Html.CheckBoxFor(model => model.EveryWeekday) 
                        @Html.LabelFor(model => model.EveryWeekday)
                    </div>
                </div>

                <div id="Weekly" class="hidden patterns">
                    <div class="editor-field">
                        Recur every @Html.EditorFor(model => model.WeeklyInterval) week(s) on:
                        @Html.ValidationMessageFor(model => model.WeeklyInterval)
                    </div>
                    <div id ="daysOfWeek">
                        @Html.CheckBoxesForEnumFlagsFor(model => model.WeekDays)
                    </div>
                </div>
                <div id="Monthly" class="hidden patterns">
                    <div class="editor-field">
                        Day @Html.EditorFor(model => model.DayOfMonth) of every @Html.EditorFor(model => model.MonthlyInterval) month(s)
                        @Html.ValidationMessageFor(model => model.DayOfMonth)
                        @Html.ValidationMessageFor(model => model.MonthlyInterval)
                    </div>
                </div>

                <div id="MonthNth" class="hidden patterns">
                    <div class="editor-field">
                        The @Html.DropDownListFor(model => model.MonthInstance, Model.AllInstances) @Html.DropDownListFor(model => model.MonthDayOfWeekMask, Model.AllDaysOfWeek) of every @Html.EditorFor(model => model.MonthNthInterval) month(s)
                        @Html.ValidationMessageFor(model => model.MonthInstance)
                        @Html.ValidationMessageFor(model => model.MonthNthInterval)
                    </div>
                </div>

                <div id="Yearly" class="hidden patterns">
                    <div class="editor-field">
                        Recur every @Html.EditorFor(model => model.YearlyInterval) year(s) on: @Html.DropDownListFor(model => model.YearMonthOfYear, Model.AllMonthsOfYear) @Html.EditorFor(model => model.DayOfMonthForYear)
                        @Html.ValidationMessageFor(model => model.YearlyInterval)
                        @Html.ValidationMessageFor(model => model.YearMonthOfYear)
                    </div>
                </div>

                <div id="YearNth" class="hidden patterns">
                    <div class="editor-field">
                        Recur every @Html.EditorFor(model => model.YearNthInterval) year(s) on the: @Html.DropDownListFor(model => model.YearInstance, Model.AllInstances) @Html.DropDownListFor(model => model.YearDayOfWeekMask, Model.AllDaysOfWeek) of @Html.DropDownListFor(model => model.YearNthMonthOfYear, Model.AllMonthsOfYear)
                        @Html.ValidationMessageFor(model => model.YearNthInterval)
                        @Html.ValidationMessageFor(model => model.YearNthMonthOfYear)
                    </div>
                </div>
            </div>
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts { 
    <script>
        function evaluate() {
            var item = $(this);
            var relatedItem = $("#recurrencePatternOptions");

            if (item.is(":checked")) {
                relatedItem.fadeIn();
            } else {
                relatedItem.fadeOut();
            }
        }
        $("#isRecurring").click(evaluate).each(evaluate);

        $(document).ready(function () {
            $("input[name=RecurrenceType]").change(function () {
                var pattern = $(this).val();
                $(".patterns").hide();
                $("#" + pattern).show();
            });
        });

        //$("#patterns").find("#Weekly input").attr('disabled', 'disabled');
        //$("#patterns").find("#Monthly input").attr('disabled', 'disabled');
        //$("#patterns").find("#MonthNth input").attr('disabled', 'disabled');
        //$("#patterns").find("#Yearly input").attr('disabled', 'disabled');
        //$("#patterns").find("#YearNth input").attr('disabled', 'disabled');
        //$("#patterns").find("#monthlyPattern input").removeAttr('disabled', 'disabled');
     </script>
}
