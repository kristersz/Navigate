@model IEnumerable<Navigate.ViewModels.WorkItemListViewModel>

@{
    ViewBag.Title = "My work items";
}

<h2>Uzdevumi</h2>

<p>
    <a href="@Url.Action("Create")" role ="button" class="btn btn-primary">Izveidot jaunu uzdevumu</a>
    <a href="#importSettingsModal" role="button" class="btn btn-primary" data-toggle="modal">Importēt uzdevumus no Outlook kalendāra</a>
</p>
<hr />
<div class="well">
    @using (Ajax.BeginForm("Index", new { @id = "filterForm", @class = "form-horizontal"}, new AjaxOptions { HttpMethod = "get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "workItemList", LoadingElementId = "ajaxRequestLoading" }))
    {
        <div id="filterButtons" class="btn-group" data-toggle="buttons-radio">
            <button type="button" class="btn btn-inverse active" value="all">Visi</button>
            <button type="button" class="btn btn-inverse" value="completed">Pabeigtie</button>
            <button type="button" class="btn btn-inverse" value="starred">Atzīmēti ar prioritāti</button>
            <button type="button" class="btn btn-inverse" value="today">Termiņš beidzas šodien</button>
            <button type="button" class="btn btn-inverse" value="late">Nokavētie</button>
        </div>
        <div>
            <strong>Ietilpst kategorijā:</strong>
            @Html.DropDownList("category", "")
        </div>
        <div id="sortOrderSelect">
            <strong>Kārtot pēc lauka:</strong>
            @Html.DropDownList("sortOrder", new List<SelectListItem>() {
                        new SelectListItem { Value = "deadline", Text = "Termiņš" },
                        new SelectListItem { Value = "priority", Text = "Prioritāte" },
                        new SelectListItem { Value = "changedate", Text = "Pēdējoreiz mainīts" },
                        new SelectListItem { Value = "createddate", Text = "Izveidots" },
                        new SelectListItem { Value = "title", Text = "Nosaukums" },
                    })
        </div>
        <input type="hidden" id="filterHolder" name="filter" />
        <input type="search" class="input-medium search-query" name="searchTerm" />
        <input type="submit" id="submitFilter" class="btn" value="Meklēt uzdevumus" />
    }
</div>

@Html.Partial("_WorkItems", Model)

<div id="importSettingsModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">Importa uzstādījumi</h3>
  </div>
  <div class="modal-body">
    <p>Lūdzu norādiet laika intervālu, par kuru importēt uzdevumus</p>
    @using (Html.BeginForm("GetOutlookCalendarItems", "WorkItem", FormMethod.Post, new { @id = "outlookSettingsForm", @class = "form-horizontal" }))
    {
        @Html.ValidationSummary(true)
        <div class="editor-label">
            <label for="IntervalStart">No:</label>
        </div>
        <div class="editor-field">
            @Html.TextBox("IntervalStart", DateTime.Now.ToString("dd.MM.yyyy HH:mm"), new { @class = "datetimefield"})
        </div>
        <div class="editor-label">
            <label for="IntervalEnd">Līdz:</label>
        </div>
        <div class="editor-field">
            @Html.TextBox("IntervalEnd", DateTime.Now.AddMonths(1).ToString("dd.MM.yyyy HH:mm"), new { @class = "datetimefield"})
        </div>
    }
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Atcelt</button>
    <button type="button" id="import" class="btn btn-primary" data-bind="click: Import">Importēt</button>
  </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        function viewModel() {
            var _this = {};
            /************************ Public Functions ************************/
            _this.Import = function () {
                var url = '@Url.Action("GetOutlookCalendarItems", "WorkItem")';
                $("#ajaxRequestLoading").show();
                $.post(url, $('#outlookSettingsForm').serializeArray(),
                    function (data) {
                        if (data == null || typeof (data) == 'undefined')
                            return;

                        $('#importSettingsModal').modal('hide');

                        showMessage(data.Message, function () {
                            document.location.href = '@Html.AttributeEncode(Url.Action("Index", "WorkItem"))';
                        });                        
                    },
                    'json'
                )
                .error(function (jqXHR, textStatus) {
                    if (jqXHR != null && typeof (jqXHR) != 'undefined') {
                        if (jqXHR.responseText != null && $(jqXHR.responseText).length == 9) {
                            showMessage($($(jqXHR.responseText)[6]).text());
                        }
                    }
                })
                .always(function () {
                    $("#ajaxRequestLoading").hide();
                });
            }
            /************************ Initialization ************************/
            ko.applyBindings(_this, $("body").get(0));
        }
        viewModel();

        function changeStatus(workItemId) {
              $.ajax({
                  url: '@Url.Action("ChangeStatus", "WorkItem")',
                  type: 'POST',
                  data: {
                      id: workItemId
                  },
                  success: function (data) {
                      if (data.IsValid) {
                          $.pnotify({
                              title: 'Informācija',
                              text: data.Message,
                              type: 'success'
                          });
                          if ($('#workItem' + workItemId).hasClass("taskDone")) {
                              $('#workItem' + workItemId).fadeTo(100, 1);
                              $("#changeStatus" + workItemId).html('<i class="icon-ok"></i> Atzīmēt kā izpildītu');
                              $('#workItem' + workItemId).removeClass("taskDone");
                          }
                          else {
                              $('#workItem' + workItemId).fadeTo(100, 0.5);
                              $("#changeStatus" + workItemId).html('<i class="icon-remove"></i> Atzīmēt kā neizpildītu');
                              $('#workItem' + workItemId).addClass("taskDone");
                          }
                      }
                      else {
                          $.pnotify({
                              title: 'Kļūda',
                              text: data.Message,
                              type: 'error'
                          });
                      }
                  },
                  error: function (jqXHR, textStatus, errorThrown) {
                      alert("Notika kļūda, lūdzu mēģiniet vēlreiz.");
                  },
                  complete: function (jqXHR, textStatus) {
                      $("#ajaxRequestLoading").hide();
                  },
                  beforeSend: function (jqXHR, settings) {
                      $("#ajaxRequestLoading").show();
                  }
              });
        }

        $(function () {
            $("#filterButtons button").click(function () {
                var filterString = $(this).val();
                setFilter(filterString);
            });

            $("#sortOrder").change(function () {
                $("#submitFilter").click();
            });

            $("#category").change(function () {
                $("#submitFilter").click();
            });
        })

        function setFilter(filterName) {
            $("#filterHolder").val(filterName);
            $("#submitFilter").click();
        }
    </script>
}
